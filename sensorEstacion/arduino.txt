#include <Wire.h>
#include <Adafruit_Sensor.h>
#include <Adafruit_BMP280.h>
#include <DHT.h>
#include <WiFi.h>
#include <WiFiMulti.h>
#include <HTTPClient.h>

// Definiciones
#define DHTPIN 5      // Pin donde conectas el DHT22
#define DHTTYPE DHT22 // Cambiar a DHT22
#define WATER_SENSOR_PIN 33
#define LDR_PIN 32

// Inicialización de sensores
DHT dht(DHTPIN, DHTTYPE);
Adafruit_BMP280 bmp;  // Crear objeto BMP280

// Variables para WiFi
#define USE_SERIAL Serial
const char* ssid = "ETEC-UBA";  // Reemplaza con tu SSID
const char* password = "ETEC-alumnos@UBA";  // Reemplaza con tu contraseña

void setup() {
  USE_SERIAL.begin(115200);
  delay(1000);

  // Inicializar DHT22
  dht.begin();

  // Inicializar BMP280
  if (!bmp.begin(0x76)) {  // Cambia a 0x77 si es necesario
    USE_SERIAL.println("Error inicializando el BMP280!");
    while (1);  // Detener el programa si no se inicializa
  }

  // Configurar pines analógicos
  pinMode(LDR_PIN, INPUT);
  pinMode(WATER_SENSOR_PIN, INPUT);

  // Conectar a WiFi
  WiFi.begin(ssid, password);
  int numberOfTries = 20;

  // Esperar a que se conecte al WiFi
  while (WiFi.status() != WL_CONNECTED && numberOfTries > 0) {
    delay(500);
    USE_SERIAL.print(".");
    numberOfTries--;
  }

  if (WiFi.status() == WL_CONNECTED) {
    USE_SERIAL.println("\nConectado a WiFi");
    USE_SERIAL.print("IP address: ");
    USE_SERIAL.println(WiFi.localIP());
  } else {
    USE_SERIAL.println("\nError de conexión a WiFi");
    while (1);  // Detener el programa si no se conecta
  }
}

void loop() {
  delay(60000);
  // Lecturas de DHT22
  float humidity = dht.readHumidity();
  float temperature = dht.readTemperature();

  // Verificar si las lecturas son válidas
  if (isnan(humidity) || isnan(temperature)) {
    USE_SERIAL.println("Error al leer DHT22");
    return; // Salir si hay error
  }

  // Lecturas de BMP280
  float pressure = bmp.readPressure() / 100.0F;
  if (isnan(pressure)) {
    USE_SERIAL.println("Error al leer presión del BMP280"); 
  }

  // Lectura de Fotoresistor
  int lightLevel = analogRead(LDR_PIN);

  // Lectura de sensor de agua
  int waterLevel = analogRead(WATER_SENSOR_PIN);

  // Crear request string con todos los datos de los sensores
  String request = "tempDHT=" + String(temperature) + 
                   "&humDHT=" + String(humidity) + 
                   "&presionBMP=" + String(pressure) + 
                   "&luzLDR=" + String(lightLevel) + 
                   "&nivelAgua=" + String(waterLevel);

  // Enviar datos por HTTP
  if (WiFi.status() == WL_CONNECTED) {
    HTTPClient http;
    USE_SERIAL.print("[HTTP] POST...\n");
    http.begin("http://10.9.121.112:5000/sensores"); // Cambia a la URL de tu servidor

    http.addHeader("Content-Type", "application/x-www-form-urlencoded");
    int httpCode = http.POST(request); // Enviar el request

    // Comprobar la respuesta del servidor
    if (httpCode > 0) {
      USE_SERIAL.printf("[HTTP] POST... code: %d\n", httpCode);
      if (httpCode == HTTP_CODE_OK) {
        String payload = http.getString();
        USE_SERIAL.println(payload);
      }
    } else {
      USE_SERIAL.printf("[HTTP] POST... failed, error: %s\n", http.errorToString(httpCode).c_str());
    }
    http.end();
  } else {
    USE_SERIAL.println("Desconectado");
  }
}
